name: Python package

on: [push]

env:
  EXAMPLE_IMAGE_NAME: ghcr.io/descope/py-example:0.1.1

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt

      - name: Lint with flake8
        run: |
            flake8 . --count --show-source --statistics

      - name: Lint with black
        uses: psf/black@stable
        with:
          options: "--check --verbose"

      - name: Run isort
        uses: isort/isort-action@master
        with:
          configuration: --profile black

      - name: Check leaks
        uses: ./.github/actions/gitleaks

      - name: License Checker
        uses: andersy005/gh-action-py-liccheck@main
        with:
          strategy-ini-file: ./liccheck.ini
          level: paranoid
          requirements-txt-file: ./requirements-dev.txt
          no-deps: false
          liccheck-version: 0.6.4

      - name: Tests
        run: |
          python -m pytest tests/*

  pkg:
    runs-on: ubuntu-latest
    needs: build
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.7

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements-dev.txt
      - name: Build package
        run: |
          mkdir src
          python -m build

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: descope-auth-0.0.1.tar.gz
          path: ./dist/descope-auth-0.0.1.tar.gz

      - run: cp ./dist/descope-auth-0.0.1.tar.gz samples/

      - name: Build example docker image
        working-directory: samples/
        run: |
          docker build . --tag ${{ env.EXAMPLE_IMAGE_NAME }}

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Push the tagged Docker image
        run: docker push ${{ env.EXAMPLE_IMAGE_NAME }}
