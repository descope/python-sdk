name: Python

on:
  pull_request:

env:
  EXAMPLE_IMAGE_NAME: ghcr.io/descope/py-example:0.1.2

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
      - name: Poetry
        uses: descope/.github/.github/actions/python/poetry/setup@main
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build coverage file
        run: |
          poetry run pytest --junitxml=/tmp/pytest.xml --cov-report=term-missing:skip-covered --cov=descope tests/ | tee /tmp/pytest-coverage.txt

      - name: Pytest coverage comment
        id: coverageComment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: /tmp/pytest-coverage.txt
          junitxml-path: /tmp/pytest.xml
          create-new-comment: false

      - name: Coverage
        run: |
          echo "Coverage Percantage - ${{ steps.coverageComment.outputs.coverage }}"
          echo "Coverage Color - ${{ steps.coverageComment.outputs.color }}"
          echo "Coverage Html - ${{ steps.coverageComment.outputs.coverageHtml }}"
          echo "Coverage Warnings - ${{ steps.coverageComment.outputs.warnings }}"
          echo "Coverage Errors - ${{ steps.coverageComment.outputs.errors }}"
          echo "Coverage Failures - ${{ steps.coverageComment.outputs.failures }}"
          echo "Coverage Skipped - ${{ steps.coverageComment.outputs.skipped }}"
          echo "Coverage Tests - ${{ steps.coverageComment.outputs.tests }}"
          echo "Coverage Time - ${{ steps.coverageComment.outputs.time }}"
          echo "Not Success Test Info - ${{ steps.coverageComment.outputs.notSuccessTestInfo }}"

  # pkg:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: ${{ github.ref == 'refs/heads/main' }}
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up Python
  #       uses: actions/setup-python@v4
  #       with:
  #         python-version: 3.7

  #     - name: Install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r requirements-dev.txt
  #     - name: Build package
  #       run: |
  #         mkdir src
  #         python -m build

  #     - name: Upload artifact
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: descope-auth-0.0.1.tar.gz
  #         path: ./dist/descope-auth-0.0.1.tar.gz

  #     - run: cp ./dist/descope-auth-0.0.1.tar.gz samples/

  #     - name: Build example docker image
  #       working-directory: samples/
  #       run: |
  #         docker build . --tag ${{ env.EXAMPLE_IMAGE_NAME }}

  #     - name: Log in to the Container registry
  #       uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Push the tagged Docker image
  #       run: docker push ${{ env.EXAMPLE_IMAGE_NAME }}
